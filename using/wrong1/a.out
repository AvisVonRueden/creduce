#!/usr/bin/env perl
use POSIX;
use strict;
use File::Spec::Functions qw(rel2abs catfile);
use Getopt::Declare;
use File::Basename;
use File::Temp qw/ tempfile tempdir /;
use File::Copy;
# use IO::File;
use IPC::Open3;

my $thisFile = "$0";
my @temporaryFiles = ();
my $PERL_SERVER_PID = 0;
my $childPid = 0;

setpgrp;
# END {kill 15, -$$}
#print "my pid is $$\n";

# here we trap control-c (and others) so we can clean up when that happens
$SIG{'ABRT'} = 'interruptHandler';
$SIG{'BREAK'} = 'interruptHandler';
$SIG{'TERM'} = 'interruptHandler';
$SIG{'QUIT'} = 'interruptHandler';
$SIG{'SEGV'} = 'interruptHandler';
$SIG{'HUP' } = 'interruptHandler';
$SIG{'TRAP'} = 'interruptHandler';
$SIG{'STOP'} = 'interruptHandler';
$SIG{'INT'} = 'interruptHandler'; # handle control-c 

sub interruptHandler {
	finalCleanup(); # call single cleanup point
	kill 1, -$$;
	exit(1); # since we were interrupted, we should exit with a non-zero code
}

# this block gets run at the end of a normally terminating program, whether it simply exits, or dies.  We use this to clean up.
END {
	my $retval = $?; # $? contains the value the program would normally have exited with
	finalCleanup(); # call single cleanup point
	exit($retval);
}

# this subroutine can be used as a way to ensure we clean up all resources whenever we exit.  This is going to be mostly temp files.  If the program terminates for almost any reason, this code will be executed.
sub finalCleanup {
	if (!defined($ENV{'DUMPALL'})) {
		foreach my $file (@temporaryFiles) {
			close($file);
			unlink ($file);
		}
	}
	# print "serverid = $PERL_SERVER_PID\n";
	if ($PERL_SERVER_PID > 0) {
		# my $ret = kill(SIGTERM, 0); # this works, but kills this script too
		my $ret = kill(SIGTERM, $PERL_SERVER_PID);
	}
}

if (defined($ENV{'HELP'})) {
	print "Here are some configuration variables you can set to affect how this program is run:\n";
	print "DEBUG --- directly runs maude so you can ctrl-c and debug\n";
	print "DEBUGON --- debugs a particular semantic rule\n";
	print "PLAIN --- prints out entire output without filtering it\n";
	print "SEARCH --- searches for all possible behaviors instead of interpreting\n";
	print "PROFILE --- performs semantic profiling using this program\n";
	print "GRAPH --- to be used with SEARCH=1; generates a graph of the state space\n";
	print "PRINTMAUDE --- simply prints out the raw Maude code; only of use to developers\n";
	print "LOADMAUDE --- loads this program into maude without executing; only of use to developers\n";
	print "TRACEMAUDE --- prints an execution trace; only of use to developers\n";
	print "IOLOG --- records a .log file showing what happens in the IO server\n";
	print "DUMPALL --- leaves all the intermediate files in the current directory\n";
	print "E.g., DEBUG=1 $thisFile\n";
	print "\n";
	print "This message was displayed because the variable HELP was set.  Use HELP= $thisFile to turn off\n";
	exit(1);
}

# may be many more of these
if (defined($ENV{'PROFILE'}) && defined($ENV{'TRACEMAUDE'})) {
	print STDERR "Error: Cannot use both PROFILE and TRACEMAUDE at the same time.\n";
	exit(1);
}

if (defined($ENV{'PRINTMAUDE'})) {
	print linkedProgram();
	exit(0);
}
my $iolog_flag = "";
if (defined($ENV{'IOLOG'})) {
	$iolog_flag = "--createLogs ";
}

# these are compile time settings and are set by the compile script using this file as a template
my $IO_SERVER="java -jar /home/regehr/z/c-semantics/dist/wrapperAndServer.jar";
# my $IOFLAG="EXTERN_COMPILED_WITH_IO";
my $SCRIPTS_DIR="/home/regehr/z/c-semantics/dist";
my $PROGRAM_NAME="small.c";
# my $ND_FLAG=0;

my $wrapperScript = catfile($SCRIPTS_DIR, 'wrapper.pl');
require $wrapperScript;
my $graphScript = catfile($SCRIPTS_DIR, 'graphSearch.pl');
require $graphScript;

# print defined($ENV{'PLAIN'});
# print defined($ENV{'TRACEMAUDE'});
my $plainOutput = (defined($ENV{'PLAIN'}) or defined($ENV{'TRACEMAUDE'})) ? 1 : 0 ;
# print "plain: $plainOutput\n";

my $stdin="";
# actual start of script
if ( -t STDIN ) {
	$stdin=""; 
} else {
	$stdin=join("", <STDIN>);
}

my $fileRunner = File::Temp->new( TEMPLATE => 'tmp-kcc-runner-XXXXXXXXXXX', SUFFIX => '.maude', UNLINK => 0 );
push(@temporaryFiles, $fileRunner);
my $fileCommand = File::Temp->new( TEMPLATE => 'tmp-kcc-cmd-XXXXXXXXXXX', SUFFIX => '.maude', UNLINK => 0 );
push(@temporaryFiles, $fileCommand);

my $fileInput = File::Temp->new( TEMPLATE => 'tmp-kcc-in-XXXXXXXXXXX', SUFFIX => '.maude', UNLINK => 0 );
push(@temporaryFiles, $fileInput);

my $traceFile;
if (defined($ENV{'TRACEMAUDE'})) {
	$traceFile = File::Temp->new( TEMPLATE => 'tmp-kcc-trace-XXXXXXXXXXX', SUFFIX => '.maude', UNLINK => 0 );
	push(@temporaryFiles, $traceFile);
}

my $fileMaudeDefinition;

if (defined($ENV{'SEARCH'}) or defined($ENV{'MODELCHECK'})) {
	$fileMaudeDefinition = catfile($SCRIPTS_DIR, "c-total-nd.maude");
} else {
	$fileMaudeDefinition = catfile($SCRIPTS_DIR, "c-total.maude");
}

print $fileRunner "load $fileMaudeDefinition\n";
print $fileRunner "load $fileInput\n";
close($fileRunner);

# create a file consisting of just the program (the tail of this script)
print $fileInput linkedProgram();
close($fileInput);

# first, set up the runner file with the right commands and set any variables
my $commandLineArguments = "";
for my $arg ($thisFile, @ARGV) {	
	$commandLineArguments .= "# \"$arg\"(.List{K}),, ";
}
my $startTerm = "eval('linked-program(.List{K}), ($commandLineArguments .List{K}), \"\Q$stdin\E\")";
my $evalLine = "erew $startTerm .\n";
my $searchLine = "search in C-program-linked : $startTerm =>! B:Bag .\n";
my $modelLine = "red in C-program-linked : modelCheck(state($startTerm), k2model('LTLAnnotation(Id Identifier(\"$ENV{'MODELCHECK'}\")(.List{K}))) ) .\n";
#my $modelLine = "--- red modelCheck(state($startTerm), k2model('LTLAnnotation(Id Identifier(\"$ENV{'MODELCHECK'}\")(.List{K}))) ) .";
# $modelLine .= "red k2model('LTLAnnotation(Id Identifier(\"$ENV{'MODELCHECK'}\")(.List{K}))) .\n";

# print $fileCommand "set print attribute on .\n";

if (defined($ENV{'PROFILE'})) {
	print $fileCommand "set profile on .\n";
	print $fileCommand "set profile on .\n";
}
if (defined($ENV{'DEBUG'})) {
	print $fileCommand "break select debug .\n";
	print $fileCommand "set break on .\n";
}
if (defined($ENV{'TRACEMAUDE'})) {
	print $fileCommand "set trace on .\n";
}
if (defined($ENV{'DEBUGON'})) {
	print $fileCommand "break select $ENV{'DEBUGON'} .\n";
	print $fileCommand "set break on .\n";
}

if (defined($ENV{'SEARCH'})) {
	print $fileCommand $searchLine;
	print $fileCommand "show search graph .\n"
} elsif (defined($ENV{'MODELCHECK'})) {
	print $fileCommand $modelLine;
} elsif (! defined($ENV{'LOADMAUDE'})) {
	print $fileCommand $evalLine;
}
if (defined($ENV{'PROFILE'})) {
	print $fileCommand "show profile .\n";
}
if (! defined($ENV{'DEBUG'}) and ! defined($ENV{'DEBUGON'}) and ! defined($ENV{'LOADMAUDE'})) {
	print $fileCommand "q\n";
}

close($fileCommand);


# I had to add this strange true; thing to get it to work in windows.  no idea why...
my $maudeCommand = "true; maude -no-wrap -no-banner " . rel2abs($fileRunner) . " " . rel2abs($fileCommand);

# now we can actually run maude on the runner file we built
# maude changes the way it behaves if it detects that it is working inside a pipe, so we have to call it differently depending on what we want
if (defined($ENV{'DEBUG'}) or defined($ENV{'DEBUGON'}) or defined($ENV{'LOADMAUDE'})) {
	#io
	exit runDebugger($maudeCommand);
} elsif (defined($ENV{'SEARCH'})) {
	my $intermediateOutputFile = "tmpSearchResults.txt";
	my $graphOutputFile = "tmpSearchResults.dot";
	# if (! $ND_FLAG) {
		# print "You did not compile this program with the '-n' setting.  You need to recompile this program using '-n' in order to see any non-linear state space.\n";
	# }
	print "Performing the search...\n";
	my ($returnValue, @dynamicOutput) = runProgram($maudeCommand);
	open(my $fh, ">$intermediateOutputFile");
	print $fh join("", @dynamicOutput);
	close($fh);
	print "Generated $intermediateOutputFile\n";
	print "Examining the output...\n";
	my $graphOutput = graphSearch($graphOutputFile, @dynamicOutput);
	print "$graphOutput\n";
	print "Generated $graphOutputFile.\n";
	
	if (defined($ENV{'GRAPH'})) {
		print "Generating graph...\n";
		system("dot -Tps2 $graphOutputFile > tmpSearchResults.ps") == 0 or die "Running dot failed: $?";
		print "Generated tmpSearchResults.ps.\n";
		system("ps2pdf tmpSearchResults.ps tmpSearchResults.pdf") == 0 or die "Running ps2pdf failed: $?";
		print "Generated tmpSearchResults.pdf\n";
	}
} else {
	my ($returnValue, $signal, $screenOutput, @dynamicOutput) = runWrapper($fileRunner, $fileCommand);
	if ($returnValue != 0 or $signal != 0) {
		die "Dynamic execution failed: $returnValue";
	}	
	my ($finalReturnValue, $finalOutput) = maudeOutputWrapper($plainOutput, $screenOutput, @dynamicOutput);
		
	if (defined($ENV{'PROFILE'})) {
		if (! -e "maudeProfileDBfile.sqlite") {
			copy(catfile($SCRIPTS_DIR, "maudeProfileDBfile.calibration.sqlite"), "maudeProfileDBfile.sqlite");
		}
		my $intermediateOutputFile = File::Temp->new( TEMPLATE => 'tmp-kcc-intermediate-XXXXXXXXXXX', SUFFIX => '.maude', UNLINK => 0 );
		push(@temporaryFiles, $intermediateOutputFile);
		writeToFile($intermediateOutputFile, @dynamicOutput);
		my $profileWrapper = catfile($SCRIPTS_DIR, 'analyzeProfile.pl');
		`perl $profileWrapper $intermediateOutputFile $PROGRAM_NAME`;
	}
	
	if (defined($ENV{'TRACEMAUDE'})) {
		print $traceFile $finalOutput;
		close $traceFile;
		print "Trace placed in $traceFile\n";
	} else {
		print $finalOutput;
	}
	exit($finalReturnValue);
}

# runs a command and returns a pair (return value, output)
sub runProgram {
	my ($command) = (@_);
	$childPid = open P, "$command |" or die "Error running \"$command\"!";
	#print "for $command, pid is $childPid\n";
	my @data=<P>;
	close P;
	$childPid = 0;
	#print "child is dead\n";
	my $returnValue = $? >> 8;
	
	return ($returnValue, @data);
}
# runs a command and returns a pair (return value, output)
sub runWrapper {
	my ($runner, $maudeCommand) = (@_);
	my $outfile;
	$outfile = File::Temp->new( TEMPLATE => 'tmp-kcc-out-XXXXXXXXXXX', SUFFIX => '.maude', UNLINK => 0 );
	push(@temporaryFiles, $outfile);
	my $errorFile;
	$errorFile = File::Temp->new( TEMPLATE => 'tmp-kcc-err-XXXXXXXXXXX', SUFFIX => '.maude', UNLINK => 0 );
	push(@temporaryFiles, $errorFile);

	my $command = "$IO_SERVER --commandFile $maudeCommand --maudeFile $runner --outputFile $outfile --errorFile $errorFile --moduleName C-program-linked $iolog_flag";
	$childPid = open P, "$command |" or die "Error running \"$command\"!";
	#print "for $command, pid is $childPid\n";
	#my @data=<P>;
	# while (defined(my $line = <P>)) {
	my $screenOutput = "";
	$| = 1; # autoflush
	my $char;
	while (read (P, $char, 1)) {
		$screenOutput .= $char;
		print "$char";
	}
	$| = 0; # no autoflush
	close P;
	#print @data;
	$childPid = 0;
	#print "child is dead\n";
	my $code = $?;
	my $returnValue = $code >> 8;
	my $signal = ($code & 127);
	
	open FILE, "<", $outfile;
	my @lines = <FILE>;
	close FILE;
	open FILE, "<", $errorFile;
	my @xlines = <FILE>;
	close FILE;
	print @xlines;
	
	# print "$returnValue, $signal\n";
	return ($returnValue, $signal, $screenOutput, @lines);
}

sub runDebugger {
	my ($command) = (@_);
	print "Running $command\n";
	exec($command);
}

sub writeToFile {
	my ($file, @data) = (@_);
	open (MYFILE, ">$file");
	for my $line  (@data) {
		print MYFILE $line;
	}
	close (MYFILE);
}


sub processStaticOutput {
	my ($str) = (@_);
	my @staticOutput = split(/\n/, $str);
	shift(@staticOutput);
	shift(@staticOutput);
	shift(@staticOutput);
	shift(@staticOutput);
	pop(@staticOutput);
	return join("\n", @staticOutput);
}
# more stuff is added during compilation



sub linkedProgram { return <<'ENDOFCOMPILEDPROGRAM';
mod C-program-linked is including C .
including #MODEL-CHECK .
eq TranslationUnitName("/home/regehr/reduce/wrong1/small.c")(.List`{K`}) = 'TranslationUnit(# "/home/regehr/reduce/wrong1/small.c"(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('Constant('StringLiteral(#("%d\n")(.List{K})))))),, 'StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('Nop(.List{K}),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("printf"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name('AnonymousName(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# true)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/reduce/wrong1/small.c")(.List{K}),, #(1)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('OnlyTypedef('Specifier('List(_`(_`)(kList("wklist_"), ('AttributeWrapper('StructDef(#(Identifier("S0"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('FieldName('AttributeWrapper('Name(#(Identifier("f0"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('FieldName('AttributeWrapper('Name(#(Identifier("f1"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'CabsLoc(#("/home/regehr/reduce/wrong1/small.c")(.List{K}),, #(2)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('Pragma('Call(#(Identifier("pack"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('Constant('NoSuffix('DecimalConstant(#(1)(.List{K}))))))))),, 'CabsLoc(#("/home/regehr/reduce/wrong1/small.c")(.List{K}),, #(7)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('AttributeWrapper('StructDef(#(Identifier(""))(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('AttributeWrapper('StructRef(#(Identifier("S0"))(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, 'List(_`(_`)(kList("wklist_"), ('FieldName('AttributeWrapper('Name(#(Identifier("f2"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('FieldName('AttributeWrapper('Name(#(Identifier("f3"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('FieldName('AttributeWrapper('Name(#(Identifier("f4"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('BitFieldName('AttributeWrapper('Name(#(Identifier("f6"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'Constant('NoSuffix('DecimalConstant(#(22)(.List{K}))))))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("a"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'CompoundInit('List(_`(_`)(kList("wklist_"), ('InitFragment('NextInit(.List{K}),, 'SingleInit('Constant('NoSuffix('DecimalConstant(#(1)(.List{K})))))))))))))))),, 'CabsLoc(#("/home/regehr/reduce/wrong1/small.c")(.List{K}),, #(8)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Static(.List{K}),, 'Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("b"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit('Constant('NoSuffix('DecimalConstant(#(1)(.List{K}))))))))))),, 'CabsLoc(#("/home/regehr/reduce/wrong1/small.c")(.List{K}),, #(18)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/reduce/wrong1/small.c")(.List{K}),, #(19)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("main"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(1)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Computation('Assign('Dot(#(Identifier("a"))(.List{K}),, #(Identifier("f6"))(.List{K})),, 'Constant('NoSuffix('DecimalConstant(#(1)(.List{K})))))),, 'CabsLoc(#("/home/regehr/reduce/wrong1/small.c")(.List{K}),, #(23)(.List{K}),, #(5)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('Assign(#(Identifier("b"))(.List{K}),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'CabsLoc(#("/home/regehr/reduce/wrong1/small.c")(.List{K}),, #(24)(.List{K}),, #(5)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('For(#(2)(.List{K}),, 'ForClauseExpression('NothingExpression(.List{K})),, 'LessThan(#(Identifier("c"))(.List{K}),, 'Constant('NoSuffix('DecimalConstant(#(10)(.List{K}))))),, 'PostIncrement(#(Identifier("c"))(.List{K})),, 'BlockStatement('AttributeWrapper('Block(#(3)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Computation('Call(#(Identifier("printf"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('Constant('StringLiteral(#("%d\n")(.List{K}))),, #(Identifier("b"))(.List{K})))))),, 'CabsLoc(#("/home/regehr/reduce/wrong1/small.c")(.List{K}),, #(26)(.List{K}),, #(9)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/reduce/wrong1/small.c")(.List{K}),, #(25)(.List{K}),, #(5)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return('Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'CabsLoc(#("/home/regehr/reduce/wrong1/small.c")(.List{K}),, #(27)(.List{K}),, #(5)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/reduce/wrong1/small.c")(.List{K}),, #(20)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/reduce/wrong1/small.c")(.List{K}),, #(28)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, # "int printf (const char *, ...);\nstruct S0\n{\n    int f0;\n    int f1;\n};\n#pragma pack(1)\nstruct\n{\n    struct S0 f2;\n    int f3;\n    int f4;\n    int f6:22;\n} a =\n{\n    1\n};\nstatic char b = 1;\nint c;\nint\nmain ()\n{\n    a.f6 = 1;\n    b = 0;\n    for (; c < 10; c++)\n        printf (\"%d\\n\", b);\n    return 0;\n}\n"(.List{K})).

eq TranslationUnitName("/home/regehr/z/c-semantics/dist/lib/clib.c")(.List`{K`}) = 'TranslationUnit(# "/home/regehr/z/c-semantics/dist/lib/clib.c"(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'Nop(.List{K}),, # "// this file gets linked in in addition to all the others, go it's a good place for misc functions\n"(.List{K})).

eq TranslationUnitName("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List`{K`}) = 'TranslationUnit(# "/home/regehr/z/c-semantics/dist/lib/ctype.c"(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('Nop(.List{K}),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("isalnum"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(6)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("isalpha"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(7)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("isblank"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(8)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("iscntrl"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(9)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("isdigit"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(10)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("isgraph"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(11)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("islower"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(12)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("isprint"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(13)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("ispunct"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(14)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("isspace"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(15)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("isupper"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(16)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("isxdigit"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(17)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("tolower"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(19)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("toupper"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(20)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("isprint"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(1)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('IfThenElse('LogicalOr('LessThanOrEqual(#(Identifier("c"))(.List{K}),, 'Constant('NoSuffix('HexConstant(#("1f")(.List{K}))))),, 'Equality(#(Identifier("c"))(.List{K}),, 'Constant('NoSuffix('HexConstant(#("7f")(.List{K})))))),, 'BlockStatement('AttributeWrapper('Block(#(4)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(5)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(5)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(4)(.List{K}),, #(30)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(2)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(3)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Constant('NoSuffix('DecimalConstant(#(1)(.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(7)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(6)(.List{K}),, #(9)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(4)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return('Constant('NoSuffix('DecimalConstant(#(1)(.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(9)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(3)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List{K}),, #(10)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, # "\n\n\n# 5 \"/home/regehr/z/c-semantics/dist/includes/ctype.h\" 2\n\nint isalnum(int c);\nint isalpha(int c);\nint isblank(int c);\nint iscntrl(int c);\nint isdigit(int c);\nint isgraph(int c);\nint islower(int c);\nint isprint(int c);\nint ispunct(int c);\nint isspace(int c);\nint isupper(int c);\nint isxdigit(int c);\n\nint tolower(int c);\nint toupper(int c);\n# 2 \"/home/regehr/z/c-semantics/dist/lib/ctype.c\" 2\n\nint isprint(int c){\n if (c <= 0x1f || c == 0x7f) {\n  return 0;\n } else {\n  return 1;\n }\n return 1;\n}\n"(.List{K})).

eq TranslationUnitName("/home/regehr/z/c-semantics/dist/lib/math.c")(.List`{K`}) = 'TranslationUnit(# "/home/regehr/z/c-semantics/dist/lib/math.c"(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('Nop(.List{K}),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("sqrt"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("x"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(6)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("cos"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("x"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(7)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("sin"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("x"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(8)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("abs"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("num"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(9)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("fabs"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("arg"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(10)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("pow"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("x"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("y"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(11)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("exp"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("x"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(12)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("log"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("x"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(13)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("atan"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("x"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(14)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("floor"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("x"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(15)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("tan"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("x"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(16)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("fmod"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("x"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("y"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(17)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("atan2"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("y"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("x"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(18)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("asin"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("x"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(19)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("abs"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("num"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(1)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('IfThenElse('GreaterThanOrEqual(#(Identifier("num"))(.List{K}),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(4)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(5)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return(#(Identifier("num"))(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(5)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(4)(.List{K}),, #(16)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(2)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(3)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Negative(#(Identifier("num"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(7)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(6)(.List{K}),, #(9)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(4)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(3)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(9)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("fabs"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("num"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(6)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('IfThenElse('GreaterThanOrEqual(#(Identifier("num"))(.List{K}),, 'Constant('NoSuffix('DecimalFloatConstant(#("0.0")(.List{K}),, #(0)(.List{K}),, #(0.0e0)(.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(9)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(10)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return(#(Identifier("num"))(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(12)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(11)(.List{K}),, #(18)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(7)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(8)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Negative(#(Identifier("num"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(14)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(13)(.List{K}),, #(9)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(11)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(10)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(16)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("pow"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("x"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Double(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("y"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(11)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('IfThenElse('LogicalAnd('Equality(#(Identifier("x"))(.List{K}),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'Equality(#(Identifier("y"))(.List{K}),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'BlockStatement('AttributeWrapper('Block(#(13)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(14)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Constant('NoSuffix('DecimalConstant(#(1)(.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(19)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(18)(.List{K}),, #(24)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(12)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(18)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(18)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('IfThenElse('LogicalAnd('Equality(#(Identifier("x"))(.List{K}),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'NotEquality(#(Identifier("y"))(.List{K}),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'BlockStatement('AttributeWrapper('Block(#(16)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(17)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(22)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(21)(.List{K}),, #(24)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(15)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(21)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(21)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('IfThenElse('LogicalAnd('Equality(#(Identifier("y"))(.List{K}),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'NotEquality(#(Identifier("x"))(.List{K}),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'BlockStatement('AttributeWrapper('Block(#(19)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(20)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Constant('NoSuffix('DecimalConstant(#(1)(.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(25)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(24)(.List{K}),, #(24)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(18)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(24)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(24)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('IfThenElse('LessThan(#(Identifier("x"))(.List{K}),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(22)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(23)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('IfThenElse('Equality('Divide(#(Identifier("y"))(.List{K}),, 'Constant('NoSuffix('DecimalFloatConstant(#("1.00")(.List{K}),, #(0)(.List{K}),, #(1.00e0)(.List{K}))))),, 'Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'JustBase(.List{K}),, #(Identifier("y"))(.List{K}))),, 'BlockStatement('AttributeWrapper('Block(#(25)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(26)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('IfThenElse('Modulo('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'JustBase(.List{K}),, #(Identifier("y"))(.List{K})),, 'Constant('NoSuffix('DecimalConstant(#(2)(.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(29)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(30)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Negative('Call(#(Identifier("exp"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('Multiply(#(Identifier("y"))(.List{K}),, 'Call(#(Identifier("log"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('Negative(#(Identifier("x"))(.List{K}))))))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(30)(.List{K}),, #(5)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(29)(.List{K}),, #(20)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(27)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(28)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Call(#(Identifier("exp"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('Multiply(#(Identifier("y"))(.List{K}),, 'Call(#(Identifier("log"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('Negative(#(Identifier("x"))(.List{K})))))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(32)(.List{K}),, #(5)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(31)(.List{K}),, #(11)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(29)(.List{K}),, #(4)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(28)(.List{K}),, #(25)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(24)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(28)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(28)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(27)(.List{K}),, #(13)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(21)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(27)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(27)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return('Call(#(Identifier("exp"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('Multiply(#(Identifier("y"))(.List{K}),, 'Call(#(Identifier("log"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("x"))(.List{K}))))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(36)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(17)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/math.c")(.List{K}),, #(38)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, # "\n\n# 4 \"/home/regehr/z/c-semantics/dist/includes/math.h\" 2\n\n// math.h (real c99 needs -lm to get math library linked in)\ndouble sqrt (double x);\ndouble cos(double x);\ndouble sin(double x);\nint abs(int num);\ndouble fabs( double arg );\ndouble pow(double x, double y);\ndouble exp(double x);\ndouble log(double x);\ndouble atan (double x);\ndouble floor(double x);\ndouble tan(double x);\ndouble fmod(double x, double y);\ndouble atan2(double y, double x);\ndouble asin(double x);\n# 2 \"/home/regehr/z/c-semantics/dist/lib/math.c\" 2\n\nint abs( int num ){\n if (num >= 0) {\n  return num;\n } else {\n  return -num;\n }\n}\ndouble fabs( double num ){\n if (num >= 0.0) {\n  return num;\n } else {\n  return -num;\n }\n}\ndouble pow(double x, double y) {\n if (x == 0 && y == 0) {\n  return 1; // this is what gcc seems to do\n }\n if (x == 0 && y != 0) {\n  return 0;\n }\n if (y == 0 && x != 0) {\n  return 1;\n }\n if (x < 0) {\n  if (y/1.00 == (int)y) {\n   if ((int)y % 2) {\n    return -exp(y*log(-x));\n   } else {\n    return exp(y*log(-x));\n   }\n  }\n }\n return exp(y*log(x));\n // \t+ 1e-6;\n}\n"(.List{K})).

eq TranslationUnitName("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List`{K`}) = 'TranslationUnit(# "/home/regehr/z/c-semantics/dist/lib/stdio.c"(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('Constant('StringLiteral(#("%s\n")(.List{K})))))),, 'StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('Nop(.List{K}),, 'DefinitionLoc('Typedef('NameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('SpecTypedef(.List{K}),, 'Unsigned(.List{K}),, 'Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('AttributeWrapper('Name(#(Identifier("size_t"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(6)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('Typedef('NameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('SpecTypedef(.List{K}),, 'AttributeWrapper('StructDef(#(Identifier(""))(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Unsigned(.List{K}),, 'Long(.List{K}),, 'Long(.List{K}),, 'Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('FieldName('AttributeWrapper('Name(#(Identifier("offset"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Unsigned(.List{K}),, 'Short(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('FieldName('AttributeWrapper('Name(#(Identifier("handle"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Unsigned(.List{K}),, 'Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('FieldName('AttributeWrapper('Name(#(Identifier("eof"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, 'List(_`(_`)(kList("wklist_"), ('AttributeWrapper('Name(#(Identifier("FILE"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(8)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Extern(.List{K}),, 'Named(#(Identifier("FILE"))(.List{K})))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("stdin_file"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(14)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Extern(.List{K}),, 'Named(#(Identifier("FILE"))(.List{K})))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("stdout_file"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(15)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Extern(.List{K}),, 'Named(#(Identifier("FILE"))(.List{K})))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("stderr_file"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(16)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Extern(.List{K}),, 'Named(#(Identifier("FILE"))(.List{K})))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("stdin"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(18)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Extern(.List{K}),, 'Named(#(Identifier("FILE"))(.List{K})))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("stdout"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(19)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Extern(.List{K}),, 'Named(#(Identifier("FILE"))(.List{K})))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("stderr"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(20)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("putchar"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("character"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(24)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("getchar"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name('AnonymousName(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(25)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("printf"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("format"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# true)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(26)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("sprintf"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("format"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# true)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(27)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("snprintf"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("n"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("format"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# true)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(28)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("puts"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("str"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(29)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("getc"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("stream"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(32)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("feof"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("stream"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(33)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("fopen"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("filename"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("mode"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(34)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("fclose"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("stream"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(35)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("fgetc"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("stream"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(36)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("fgets"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("str"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("size"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("stream"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(37)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('Typedef('NameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('SpecTypedef(.List{K}),, 'Unsigned(.List{K}),, 'Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('AttributeWrapper('Name(#(Identifier("size_t"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(9)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('Typedef('NameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('SpecTypedef(.List{K}),, 'AttributeWrapper('StructDef(#(Identifier(""))(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('FieldName('AttributeWrapper('Name(#(Identifier("quot"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('FieldName('AttributeWrapper('Name(#(Identifier("rem"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, 'List(_`(_`)(kList("wklist_"), ('AttributeWrapper('Name(#(Identifier("div_t"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(10)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('Typedef('NameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('SpecTypedef(.List{K}),, 'AttributeWrapper('StructDef(#(Identifier(""))(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Long(.List{K}),, 'Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('FieldName('AttributeWrapper('Name(#(Identifier("quot"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Long(.List{K}),, 'Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('FieldName('AttributeWrapper('Name(#(Identifier("rem"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, 'List(_`(_`)(kList("wklist_"), ('AttributeWrapper('Name(#(Identifier("ldiv_t"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(11)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("malloc"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("size"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(13)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("realloc"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("ptr"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("size"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(14)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("free"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("pointer"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(15)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("calloc"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("nelem"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("elsize"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(16)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("exit"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("status"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(17)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("__debug"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("i"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(18)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("srand"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Unsigned(.List{K}),, 'Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("seed"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(19)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("rand"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name('AnonymousName(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(20)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("abort"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name('AnonymousName(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(21)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("atoi"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("str"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(22)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("getc"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("stream"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(1)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Call(#(Identifier("fgetc"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("stream"))(.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(5)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(4)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(6)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("puts"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("str"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(2)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Call(#(Identifier("printf"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('Constant('StringLiteral(#("%s\n")(.List{K}))),, #(Identifier("str"))(.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(9)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(8)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(10)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("__fslPutc"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("handle"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(12)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("__fslOpenFile"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("filename"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("mode"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(14)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("__fslCloseFile"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("handle"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(15)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("__fslFGetC"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("handle"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Unsigned(.List{K}),, 'Long(.List{K}),, 'Long(.List{K}),, 'Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("offset"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(16)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("__fsl_next_fd"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit('Constant('NoSuffix('DecimalConstant(#(3)(.List{K}))))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(17)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("putc"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("stream"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(3)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Call(#(Identifier("__fslPutc"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("c"))(.List{K}),, 'Arrow(#(Identifier("stream"))(.List{K}),, #(Identifier("handle"))(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(20)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(19)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(21)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("stdin_file"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'CompoundInit('List(_`(_`)(kList("wklist_"), ('InitFragment('NextInit(.List{K}),, 'SingleInit('Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'InitFragment('NextInit(.List{K}),, 'SingleInit('Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'InitFragment('NextInit(.List{K}),, 'SingleInit('Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))))))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(24)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("stdout_file"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'CompoundInit('List(_`(_`)(kList("wklist_"), ('InitFragment('NextInit(.List{K}),, 'SingleInit('Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'InitFragment('NextInit(.List{K}),, 'SingleInit('Constant('NoSuffix('DecimalConstant(#(1)(.List{K})))))),, 'InitFragment('NextInit(.List{K}),, 'SingleInit('Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))))))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(25)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("stderr_file"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'CompoundInit('List(_`(_`)(kList("wklist_"), ('InitFragment('NextInit(.List{K}),, 'SingleInit('Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'InitFragment('NextInit(.List{K}),, 'SingleInit('Constant('NoSuffix('DecimalConstant(#(2)(.List{K})))))),, 'InitFragment('NextInit(.List{K}),, 'SingleInit('Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))))))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(26)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("stdin"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit('Reference(#(Identifier("stdin_file"))(.List{K}))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(27)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("stdout"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit('Reference(#(Identifier("stdout_file"))(.List{K}))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(28)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("stderr"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit('Reference(#(Identifier("stderr_file"))(.List{K}))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(29)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("fopen"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("filename"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("mode"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(4)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("nextHandle"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit('Call(#(Identifier("__fslOpenFile"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("filename"))(.List{K}),, #(Identifier("mode"))(.List{K})))))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(33)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("newFile"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'Call(#(Identifier("malloc"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SizeofType('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'JustBase(.List{K})))))))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(38)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('Assign('Arrow(#(Identifier("newFile"))(.List{K}),, #(Identifier("offset"))(.List{K})),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(39)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('Assign('Arrow(#(Identifier("newFile"))(.List{K}),, #(Identifier("handle"))(.List{K})),, #(Identifier("nextHandle"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(40)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return(#(Identifier("newFile"))(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(42)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(30)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(43)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("fclose"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("stream"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(6)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("retval"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit('Call(#(Identifier("__fslCloseFile"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('Arrow(#(Identifier("stream"))(.List{K}),, #(Identifier("handle"))(.List{K}))))))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(46)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('IfThenElse(#(Identifier("retval"))(.List{K}),, 'BlockStatement('AttributeWrapper('Block(#(8)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(9)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Negative('Constant('NoSuffix('DecimalConstant(#(1)(.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(48)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(47)(.List{K}),, #(14)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(7)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(47)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(47)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('Call(#(Identifier("free"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("stream"))(.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(50)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return('Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(52)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(45)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(53)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("feof"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("stream"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(10)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Arrow(#(Identifier("stream"))(.List{K}),, #(Identifier("eof"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(56)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(55)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(57)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("fgetc"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("stream"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(11)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("retval"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit('Call(#(Identifier("__fslFGetC"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('Arrow(#(Identifier("stream"))(.List{K}),, #(Identifier("handle"))(.List{K})),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))))))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(60)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('IfThenElse('LessThan(#(Identifier("retval"))(.List{K}),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(13)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(14)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Computation('Assign('Arrow(#(Identifier("stream"))(.List{K}),, #(Identifier("eof"))(.List{K})),, 'Constant('NoSuffix('DecimalConstant(#(1)(.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(64)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(61)(.List{K}),, #(18)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(12)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(61)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(61)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return(#(Identifier("retval"))(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(67)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(59)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(68)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("fgets"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("str"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("size"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("FILE"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("stream"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(15)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('IfThenElse('LessThan(#(Identifier("size"))(.List{K}),, 'Constant('NoSuffix('DecimalConstant(#(2)(.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(17)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(18)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(71)(.List{K}),, #(17)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(71)(.List{K}),, #(15)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(16)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(71)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(71)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("i"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit('Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(72)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('While('LessThan(#(Identifier("i"))(.List{K}),, 'Minus(#(Identifier("size"))(.List{K}),, 'Constant('NoSuffix('DecimalConstant(#(1)(.List{K})))))),, 'BlockStatement('AttributeWrapper('Block(#(20)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(21)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("oneChar"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit('Call(#(Identifier("fgetc"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("stream"))(.List{K})))))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(74)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('IfThenElse('Equality(#(Identifier("oneChar"))(.List{K}),, 'Negative('Constant('NoSuffix('DecimalConstant(#(1)(.List{K})))))),, 'BlockStatement('AttributeWrapper('Block(#(23)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(24)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('IfThenElse('Equality(#(Identifier("i"))(.List{K}),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(27)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(28)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(77)(.List{K}),, #(5)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(76)(.List{K}),, #(16)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(25)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(26)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Break(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(79)(.List{K}),, #(5)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(78)(.List{K}),, #(11)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(76)(.List{K}),, #(4)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(75)(.List{K}),, #(22)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(22)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(75)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(75)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('Assign('ArrayIndex(#(Identifier("str"))(.List{K}),, #(Identifier("i"))(.List{K})),, #(Identifier("oneChar"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(82)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('IfThenElse('Equality(#(Identifier("oneChar"))(.List{K}),, 'Constant('CharLiteral(#(10)(.List{K})))),, 'BlockStatement('AttributeWrapper('Block(#(31)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(32)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Break(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(84)(.List{K}),, #(4)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(83)(.List{K}),, #(24)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(30)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(83)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(83)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('PostIncrement(#(Identifier("i"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(87)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(73)(.List{K}),, #(22)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(73)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('Assign('ArrayIndex(#(Identifier("str"))(.List{K}),, 'Plus(#(Identifier("i"))(.List{K}),, 'Constant('NoSuffix('DecimalConstant(#(1)(.List{K})))))),, 'Constant('CharLiteral(#(0)(.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(89)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return(#(Identifier("str"))(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(90)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(70)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List{K}),, #(91)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, # "\n\n# 4 \"/home/regehr/z/c-semantics/dist/includes/stdio.h\" 2\n\n\ntypedef unsigned int size_t;\n\ntypedef struct {\n unsigned long long int offset;\n unsigned short handle;\n unsigned char eof;\n} FILE;\n\nextern FILE stdin_file;\nextern FILE stdout_file;\nextern FILE stderr_file;\n\nextern FILE* stdin;\nextern FILE* stdout;\nextern FILE* stderr;\n\n// stdio.h\n\nint putchar( int character );\nint getchar( void );\nint printf(const char * restrict format, ...);\nint sprintf(char * restrict s, const char * restrict format, ...);\nint snprintf(char * restrict s, size_t n, const char * restrict format, ...);\nint puts(const char * str);\n\n//int getc(FILE *stream);\nint getc(FILE *stream);\nint feof( FILE * stream );\nFILE* fopen(const char *filename, const char *mode);\nint fclose(FILE *stream);\nint fgetc(FILE *stream);\nchar* fgets (char* restrict str, int size, FILE* restrict stream);\n# 2 \"/home/regehr/z/c-semantics/dist/lib/stdio.c\" 2\n\n\n\n\n// stdlib.h\n\n\n\ntypedef unsigned int size_t; // this needs to correspond to cfg:sizeut\ntypedef struct {int quot; int rem;} div_t;\ntypedef struct {long int quot; long int rem;} ldiv_t;\n\nvoid *malloc(size_t size);\nvoid *realloc(void *ptr, size_t size);\nvoid free(void *pointer);\nvoid *calloc(size_t nelem, size_t elsize);\nvoid exit(int status);\nvoid __debug(int i);\nvoid srand (unsigned int seed);\nint rand (void);\nvoid abort(void);\nint atoi (const char * str);\n# 3 \"/home/regehr/z/c-semantics/dist/lib/stdio.c\" 2\n\nint getc(FILE *stream){\n return fgetc(stream);\n}\n\nint puts(const char * str){\n return printf(\"%s\\n\", str);\n}\n\nint __fslPutc(char c, int handle);\n// int __fslOpenFile(const char* filename, int handle);\nint __fslOpenFile(const char* filename, const char* mode);\nint __fslCloseFile(int handle);\nint __fslFGetC(int handle, unsigned long long int offset);\nint __fsl_next_fd = 3;\n\nint putc (char c, FILE* stream) {\n return __fslPutc(c, stream->handle);\n}\n\n\nFILE stdin_file = {0, 0, 0};\nFILE stdout_file = {0, 1, 0};\nFILE stderr_file = {0, 2, 0};\nFILE* stdin = &stdin_file;\nFILE* stdout = &stdout_file;\nFILE* stderr = &stderr_file;\nFILE* fopen(const char *filename, const char *mode){\n //int nextHandle = __fsl_next_fd++;\n //int retval = __fslOpenFile(filename, nextHandle);\n int nextHandle = __fslOpenFile(filename, mode);\n // if (retval) {\n  // return NULL;\n // }\n\n FILE* newFile = (FILE*)malloc(sizeof(FILE));\n newFile->offset = 0;\n newFile->handle = nextHandle;\n\n return newFile;\n}\n\nint fclose(FILE* stream){\n int retval = __fslCloseFile(stream->handle);\n if (retval) {\n  return -1;\n }\n free(stream);\n\n return 0;\n}\n\nint feof ( FILE * stream ) {\n return stream->eof;\n}\n\nint fgetc(FILE* stream){\n int retval = __fslFGetC(stream->handle, 0); // offset is not being used\n if (retval < 0) {\n  // stream->offset++;\n // } else {\n  stream->eof = 1;\n }\n //printf(\"read %x\\n\", retval);\n return retval;\n}\n\nchar* fgets (char* restrict str, int size, FILE* restrict stream){\n if (size < 2){ return ((void *)0); }\n int i = 0;\n while (i < size - 1){\n  int oneChar = fgetc(stream);\n  if (oneChar == -1) {\n   if (i == 0) {\n    return ((void *)0);\n   } else {\n    break;\n   }\n  }\n  str[i] = oneChar;\n  if (oneChar == '\\n') {\n   break;\n  }\n\n  i++;\n }\n str[i + 1] = '\\0';\n return str;\n}\n"(.List{K})).

eq TranslationUnitName("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List`{K`}) = 'TranslationUnit(# "/home/regehr/z/c-semantics/dist/lib/stdlib.c"(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('Nop(.List{K}),, 'DefinitionLoc('Typedef('NameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('SpecTypedef(.List{K}),, 'Unsigned(.List{K}),, 'Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('AttributeWrapper('Name(#(Identifier("size_t"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List{K}),, #(9)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('Typedef('NameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('SpecTypedef(.List{K}),, 'AttributeWrapper('StructDef(#(Identifier(""))(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('FieldName('AttributeWrapper('Name(#(Identifier("quot"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('FieldName('AttributeWrapper('Name(#(Identifier("rem"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, 'List(_`(_`)(kList("wklist_"), ('AttributeWrapper('Name(#(Identifier("div_t"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List{K}),, #(10)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('Typedef('NameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('SpecTypedef(.List{K}),, 'AttributeWrapper('StructDef(#(Identifier(""))(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Long(.List{K}),, 'Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('FieldName('AttributeWrapper('Name(#(Identifier("quot"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Long(.List{K}),, 'Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('FieldName('AttributeWrapper('Name(#(Identifier("rem"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, 'List(_`(_`)(kList("wklist_"), ('AttributeWrapper('Name(#(Identifier("ldiv_t"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List{K}),, #(11)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("malloc"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("size"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List{K}),, #(13)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("realloc"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("ptr"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("size"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List{K}),, #(14)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("free"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("pointer"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List{K}),, #(15)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("calloc"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("nelem"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("elsize"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List{K}),, #(16)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("exit"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("status"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List{K}),, #(17)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("__debug"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("i"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List{K}),, #(18)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("srand"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Unsigned(.List{K}),, 'Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("seed"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List{K}),, #(19)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("rand"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name('AnonymousName(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List{K}),, #(20)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("abort"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name('AnonymousName(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List{K}),, #(21)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("atoi"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("str"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List{K}),, #(22)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("atoi"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(1)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("res"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit('Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List{K}),, #(4)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('While('LogicalAnd('GreaterThanOrEqual('Dereference(#(Identifier("c"))(.List{K})),, 'Constant('CharLiteral(#(48)(.List{K})))),, 'LessThanOrEqual('Dereference(#(Identifier("c"))(.List{K})),, 'Constant('CharLiteral(#(57)(.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(2)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Computation('Assign(#(Identifier("res"))(.List{K}),, 'Minus('Plus('Multiply(#(Identifier("res"))(.List{K}),, 'Constant('NoSuffix('DecimalConstant(#(10)(.List{K}))))),, 'Dereference('PostIncrement(#(Identifier("c"))(.List{K})))),, 'Constant('CharLiteral(#(48)(.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List{K}),, #(6)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List{K}),, #(5)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return(#(Identifier("res"))(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List{K}),, #(7)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List{K}),, #(3)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List{K}),, #(8)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, # "\n\n# 4 \"/home/regehr/z/c-semantics/dist/includes/stdlib.h\" 2\n\n// stdlib.h\n\n\n\ntypedef unsigned int size_t; // this needs to correspond to cfg:sizeut\ntypedef struct {int quot; int rem;} div_t;\ntypedef struct {long int quot; long int rem;} ldiv_t;\n\nvoid *malloc(size_t size);\nvoid *realloc(void *ptr, size_t size);\nvoid free(void *pointer);\nvoid *calloc(size_t nelem, size_t elsize);\nvoid exit(int status);\nvoid __debug(int i);\nvoid srand (unsigned int seed);\nint rand (void);\nvoid abort(void);\nint atoi (const char * str);\n# 2 \"/home/regehr/z/c-semantics/dist/lib/stdlib.c\" 2\n\nint atoi(const char *c) {\n int res = 0;\n while (*c >= '0' && *c <= '9')\n  res = res * 10 + *c++ - '0';\n return res;\n}\n"(.List{K})).

eq TranslationUnitName("/home/regehr/z/c-semantics/dist/lib/string.c")(.List`{K`}) = 'TranslationUnit(# "/home/regehr/z/c-semantics/dist/lib/string.c"(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('Constant('StringLiteral(#("")(.List{K}))),, 'Constant('StringLiteral(#("")(.List{K})))))),, 'StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('StmtCons('Nop(.List{K}),, 'DefinitionLoc('Typedef('NameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('SpecTypedef(.List{K}),, 'Unsigned(.List{K}),, 'Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('AttributeWrapper('Name(#(Identifier("size_t"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(7)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("strlen"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("str"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(8)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("strcmp"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("str1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("str2"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(9)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("strcpy"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s2"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(10)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("strncpy"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("dest"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("src"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("n"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(11)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("strcat"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("dest"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("src"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(12)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("strncat"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s2"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("n"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(13)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("strchr"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(14)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("memset"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("ptr"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("value"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("num"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(15)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("memcpy"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("destination"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("source"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("num"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(16)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("memmove"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s2"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("n"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(17)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("memcmp"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s2"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("n"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(18)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("memchr"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("n"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(19)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("strrchr"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name('AnonymousName(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name('AnonymousName(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(20)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("strncmp"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s2"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("n"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(21)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("strcspn"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s2"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(22)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("strpbrk"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s2"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(23)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("strspn"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s2"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(24)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("strstr"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("haystack"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("needle"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(25)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("strtok"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("delimiters"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(26)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('Typedef('NameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('SpecTypedef(.List{K}),, 'Unsigned(.List{K}),, 'Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('AttributeWrapper('Name(#(Identifier("size_t"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(9)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('Typedef('NameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('SpecTypedef(.List{K}),, 'AttributeWrapper('StructDef(#(Identifier(""))(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('FieldName('AttributeWrapper('Name(#(Identifier("quot"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('FieldName('AttributeWrapper('Name(#(Identifier("rem"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, 'List(_`(_`)(kList("wklist_"), ('AttributeWrapper('Name(#(Identifier("div_t"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(10)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('Typedef('NameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('SpecTypedef(.List{K}),, 'AttributeWrapper('StructDef(#(Identifier(""))(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Long(.List{K}),, 'Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('FieldName('AttributeWrapper('Name(#(Identifier("quot"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'FieldGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Long(.List{K}),, 'Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('FieldName('AttributeWrapper('Name(#(Identifier("rem"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, 'List(_`(_`)(kList("wklist_"), ('AttributeWrapper('Name(#(Identifier("ldiv_t"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(11)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("malloc"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("size"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(13)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("realloc"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("ptr"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("size"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(14)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("free"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("pointer"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(15)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("calloc"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("nelem"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("elsize"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(16)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("exit"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("status"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(17)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("__debug"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("i"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(18)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("srand"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Unsigned(.List{K}),, 'Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("seed"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(19)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("rand"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name('AnonymousName(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(20)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("abort"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name('AnonymousName(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(21)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("atoi"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("str"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(22)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("strncpy"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("dest"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("src"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("n"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(1)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("ret"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit(#(Identifier("dest"))(.List{K})))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(7)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('DoWhile('Assign('Dereference('PostIncrement(#(Identifier("dest"))(.List{K}))),, 'Dereference('PostIncrement(#(Identifier("src"))(.List{K})))),, 'BlockStatement('AttributeWrapper('Block(#(2)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(3)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('IfThenElse('LogicalNot('PostDecrement(#(Identifier("n"))(.List{K}))),, 'BlockStatement('AttributeWrapper('Block(#(5)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(6)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return(#(Identifier("ret"))(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(10)(.List{K}),, #(4)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(9)(.List{K}),, #(13)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(4)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(9)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(9)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(8)(.List{K}),, #(5)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(8)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('While('PostDecrement(#(Identifier("n"))(.List{K})),, 'BlockStatement('AttributeWrapper('Block(#(7)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(8)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Computation('Assign('Dereference('PostIncrement(#(Identifier("dest"))(.List{K}))),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(14)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(13)(.List{K}),, #(14)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(13)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return(#(Identifier("ret"))(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(16)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(6)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(17)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("strlen"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("str"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(9)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("s"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(20)(.List{K}),, #(5)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('For(#(10)(.List{K}),, 'ForClauseExpression('Assign(#(Identifier("s"))(.List{K}),, #(Identifier("str"))(.List{K}))),, 'Dereference(#(Identifier("s"))(.List{K})),, 'PreIncrement(#(Identifier("s"))(.List{K})),, 'BlockStatement('AttributeWrapper('Block(#(11)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(21)(.List{K}),, #(27)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(21)(.List{K}),, #(5)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return('Minus(#(Identifier("s"))(.List{K}),, #(Identifier("str"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(22)(.List{K}),, #(5)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(19)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(23)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("memset"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("dest"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("value"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("len"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(12)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Unsigned(.List{K}),, 'Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("ptr"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Unsigned(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, #(Identifier("dest"))(.List{K}))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(26)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('While('GreaterThan('PostDecrement(#(Identifier("len"))(.List{K})),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(14)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(15)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Computation('Assign('Dereference('PostIncrement(#(Identifier("ptr"))(.List{K}))),, #(Identifier("value"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(28)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(27)(.List{K}),, #(20)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(27)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return(#(Identifier("dest"))(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(30)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(25)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(31)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("memchr"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("n"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(16)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Unsigned(.List{K}),, 'Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("src"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit(#(Identifier("s"))(.List{K})))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(35)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Unsigned(.List{K}),, 'Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("uc"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit(#(Identifier("c"))(.List{K})))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(36)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('While('NotEquality('PostDecrement(#(Identifier("n"))(.List{K})),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(17)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(18)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('IfThenElse('Equality('Dereference(#(Identifier("src"))(.List{K})),, #(Identifier("uc"))(.List{K})),, 'BlockStatement('AttributeWrapper('Block(#(20)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(21)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, #(Identifier("src"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(39)(.List{K}),, #(4)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(38)(.List{K}),, #(19)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(19)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(38)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(38)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('PostIncrement(#(Identifier("src"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(41)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(37)(.List{K}),, #(19)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(37)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(43)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(34)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(44)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("strcspn"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s2"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(24)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("sc1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(48)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('For(#(25)(.List{K}),, 'ForClauseExpression('Assign(#(Identifier("sc1"))(.List{K}),, #(Identifier("s1"))(.List{K}))),, 'NotEquality('Dereference(#(Identifier("sc1"))(.List{K})),, 'Constant('CharLiteral(#(0)(.List{K})))),, 'PostIncrement(#(Identifier("sc1"))(.List{K})),, 'BlockStatement('AttributeWrapper('Block(#(26)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('IfThenElse('NotEquality('Call(#(Identifier("strchr"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("s2"))(.List{K}),, 'Dereference(#(Identifier("sc1"))(.List{K})))))),, 'Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'BlockStatement('AttributeWrapper('Block(#(28)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Minus(#(Identifier("sc1"))(.List{K}),, #(Identifier("s1"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(51)(.List{K}),, #(4)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(27)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(50)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(50)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(49)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return('Minus(#(Identifier("sc1"))(.List{K}),, #(Identifier("s1"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(52)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(47)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(53)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("strpbrk"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s2"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(30)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("sc1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(57)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('For(#(31)(.List{K}),, 'ForClauseExpression('Assign(#(Identifier("sc1"))(.List{K}),, #(Identifier("s1"))(.List{K}))),, 'NotEquality('Dereference(#(Identifier("sc1"))(.List{K})),, 'Constant('CharLiteral(#(0)(.List{K})))),, 'PostIncrement(#(Identifier("sc1"))(.List{K})),, 'BlockStatement('AttributeWrapper('Block(#(32)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('IfThenElse('NotEquality('Call(#(Identifier("strchr"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("s2"))(.List{K}),, 'Dereference(#(Identifier("sc1"))(.List{K})))))),, 'Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'BlockStatement('AttributeWrapper('Block(#(34)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, #(Identifier("sc1"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(60)(.List{K}),, #(4)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(33)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(59)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(59)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(58)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(61)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(56)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(62)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("strspn"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s2"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(38)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("sc1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(66)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('For(#(39)(.List{K}),, 'ForClauseExpression('Assign(#(Identifier("sc1"))(.List{K}),, #(Identifier("s1"))(.List{K}))),, 'NotEquality('Dereference(#(Identifier("sc1"))(.List{K})),, 'Constant('CharLiteral(#(0)(.List{K})))),, 'PostIncrement(#(Identifier("sc1"))(.List{K})),, 'BlockStatement('AttributeWrapper('Block(#(40)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('IfThenElse('Equality('Call(#(Identifier("strchr"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("s2"))(.List{K}),, 'Dereference(#(Identifier("sc1"))(.List{K})))))),, 'Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'BlockStatement('AttributeWrapper('Block(#(42)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Minus(#(Identifier("sc1"))(.List{K}),, #(Identifier("s1"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(69)(.List{K}),, #(4)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(41)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(68)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(68)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(67)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return('Minus(#(Identifier("sc1"))(.List{K}),, #(Identifier("s1"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(70)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(65)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(71)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("strstr"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("haystack"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("needle"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(44)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("needlelen"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(75)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('IfThenElse('Equality('Dereference(#(Identifier("needle"))(.List{K})),, 'Constant('CharLiteral(#(0)(.List{K})))),, 'BlockStatement('AttributeWrapper('Block(#(46)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, #(Identifier("haystack"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(78)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(45)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(77)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(77)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('Assign(#(Identifier("needlelen"))(.List{K}),, 'Call(#(Identifier("strlen"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("needle"))(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(79)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('For(#(48)(.List{K}),, 'ForClauseExpression('NothingExpression(.List{K})),, 'NotEquality('Assign(#(Identifier("haystack"))(.List{K}),, 'Call(#(Identifier("strchr"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("haystack"))(.List{K}),, 'Dereference(#(Identifier("needle"))(.List{K}))))))),, 'Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'PostIncrement(#(Identifier("haystack"))(.List{K})),, 'BlockStatement('AttributeWrapper('Block(#(49)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('IfThenElse('Equality('Call(#(Identifier("strncmp"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("haystack"))(.List{K}),, #(Identifier("needle"))(.List{K}),, #(Identifier("needlelen"))(.List{K}))))),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(51)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, #(Identifier("haystack"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(82)(.List{K}),, #(4)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(50)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(81)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(81)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(80)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(83)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(74)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(84)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("strtok_r"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("delimiters"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("lasts"))(.List{K}),, 'AttributeWrapper('PointerType('AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(55)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("sbegin"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K})),, 'InitName('AttributeWrapper('Name(#(Identifier("send"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(88)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('Assign(#(Identifier("sbegin"))(.List{K}),, 'Conditional(#(Identifier("s"))(.List{K}),, #(Identifier("s"))(.List{K}),, 'Dereference(#(Identifier("lasts"))(.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(89)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('AssignPlus(#(Identifier("sbegin"))(.List{K}),, 'Call(#(Identifier("strspn"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("sbegin"))(.List{K}),, #(Identifier("delimiters"))(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(90)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('IfThenElse('Equality('Dereference(#(Identifier("sbegin"))(.List{K})),, 'Constant('CharLiteral(#(0)(.List{K})))),, 'BlockStatement('AttributeWrapper('Block(#(57)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(58)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Computation('Assign('Dereference(#(Identifier("lasts"))(.List{K})),, 'Constant('StringLiteral(#("")(.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(92)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(93)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(91)(.List{K}),, #(23)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(56)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(91)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(91)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('Assign(#(Identifier("send"))(.List{K}),, 'Plus(#(Identifier("sbegin"))(.List{K}),, 'Call(#(Identifier("strcspn"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("sbegin"))(.List{K}),, #(Identifier("delimiters"))(.List{K})))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(95)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('IfThenElse('NotEquality('Dereference(#(Identifier("send"))(.List{K})),, 'Constant('CharLiteral(#(0)(.List{K})))),, 'BlockStatement('AttributeWrapper('Block(#(61)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Computation('Assign('Dereference('PostIncrement(#(Identifier("send"))(.List{K}))),, 'Constant('CharLiteral(#(0)(.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(97)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(60)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(96)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(96)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('Assign('Dereference(#(Identifier("lasts"))(.List{K})),, #(Identifier("send"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(98)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return(#(Identifier("sbegin"))(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(99)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(87)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(100)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("strtok"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("delimiters"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(62)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Static(.List{K}),, 'Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("ssave"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit('Constant('StringLiteral(#("")(.List{K})))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(104)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return('Call(#(Identifier("strtok_r"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("s1"))(.List{K}),, #(Identifier("delimiters"))(.List{K}),, 'Reference(#(Identifier("ssave"))(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(105)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(103)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(106)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("strcmp"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s2"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(63)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('For(#(64)(.List{K}),, 'ForClauseExpression('NothingExpression(.List{K})),, 'Equality('Dereference(#(Identifier("s1"))(.List{K})),, 'Dereference(#(Identifier("s2"))(.List{K}))),, 'Comma('List(_`(_`)(kList("wklist_"), ('PreIncrement(#(Identifier("s1"))(.List{K})),, 'PreIncrement(#(Identifier("s2"))(.List{K})))))),, 'BlockStatement('AttributeWrapper('Block(#(65)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('IfThenElse('Equality('Dereference(#(Identifier("s1"))(.List{K})),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(67)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(111)(.List{K}),, #(13)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(66)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(110)(.List{K}),, #(9)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(110)(.List{K}),, #(9)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(109)(.List{K}),, #(5)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return('Conditional('LessThan('Dereference('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Unsigned(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, #(Identifier("s1"))(.List{K}))),, 'Dereference('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Unsigned(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, #(Identifier("s2"))(.List{K})))),, 'Negative('Constant('NoSuffix('DecimalConstant(#(1)(.List{K}))))),, 'Constant('NoSuffix('DecimalConstant(#(1)(.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(112)(.List{K}),, #(5)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(108)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(113)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("memmove"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s2"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("n"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(70)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("tmp"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'Call(#(Identifier("malloc"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("n"))(.List{K}))))))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(116)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('Call(#(Identifier("memcpy"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("tmp"))(.List{K}),, #(Identifier("s2"))(.List{K}),, #(Identifier("n"))(.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(117)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('Call(#(Identifier("memcpy"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("s1"))(.List{K}),, #(Identifier("tmp"))(.List{K}),, #(Identifier("n"))(.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(118)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('Call(#(Identifier("free"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("tmp"))(.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(119)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return(#(Identifier("s1"))(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(120)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(115)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(121)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("strchr"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(72)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('While('LogicalAnd('NotEquality('Dereference(#(Identifier("s"))(.List{K})),, 'Constant('CharLiteral(#(0)(.List{K})))),, 'NotEquality('Dereference(#(Identifier("s"))(.List{K})),, 'Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'JustBase(.List{K}),, #(Identifier("c"))(.List{K})))),, 'BlockStatement('AttributeWrapper('Block(#(73)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Computation('PostIncrement(#(Identifier("s"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(129)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(128)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return('Conditional('Equality('Dereference(#(Identifier("s"))(.List{K})),, #(Identifier("c"))(.List{K})),, 'Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, #(Identifier("s"))(.List{K})),, 'Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(130)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(124)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(131)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("strncmp"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s2"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("n"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(77)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Unsigned(.List{K}),, 'Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("uc1"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K})),, 'InitName('AttributeWrapper('Name(#(Identifier("uc2"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'NoInit(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(135)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('IfThenElse('Equality(#(Identifier("n"))(.List{K}),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(79)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(138)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(78)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(137)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(137)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('While('LogicalAnd('GreaterThan('PostDecrement(#(Identifier("n"))(.List{K})),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'Equality('Dereference(#(Identifier("s1"))(.List{K})),, 'Dereference(#(Identifier("s2"))(.List{K})))),, 'BlockStatement('AttributeWrapper('Block(#(80)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(81)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('IfThenElse('LogicalOr('Equality(#(Identifier("n"))(.List{K}),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'Equality('Dereference(#(Identifier("s1"))(.List{K})),, 'Constant('CharLiteral(#(0)(.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(83)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(144)(.List{K}),, #(4)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(82)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(143)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(143)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('PostIncrement(#(Identifier("s1"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(145)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('PostIncrement(#(Identifier("s2"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(146)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(140)(.List{K}),, #(32)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(140)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('Assign(#(Identifier("uc1"))(.List{K}),, 'Dereference('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Unsigned(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, #(Identifier("s1"))(.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(148)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('Assign(#(Identifier("uc2"))(.List{K}),, 'Dereference('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Unsigned(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, #(Identifier("s2"))(.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(149)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return('Conditional('LessThan(#(Identifier("uc1"))(.List{K}),, #(Identifier("uc2"))(.List{K})),, 'Negative('Constant('NoSuffix('DecimalConstant(#(1)(.List{K}))))),, 'GreaterThan(#(Identifier("uc1"))(.List{K}),, #(Identifier("uc2"))(.List{K})))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(150)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(134)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(151)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("strrchr"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('AttributeWrapper('FunctionType('AttributeWrapper('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("c"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(86)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("last"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(155)(.List{K}),, #(6)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('IfThenElse('Equality(#(Identifier("c"))(.List{K}),, 'Constant('CharLiteral(#(0)(.List{K})))),, 'BlockStatement('AttributeWrapper('Block(#(89)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Call(#(Identifier("strchr"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("s"))(.List{K}),, #(Identifier("c"))(.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(160)(.List{K}),, #(10)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(88)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(159)(.List{K}),, #(6)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(159)(.List{K}),, #(6)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('While('NotEquality('Assign(#(Identifier("s"))(.List{K}),, 'Call(#(Identifier("strchr"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("s"))(.List{K}),, #(Identifier("c"))(.List{K})))))),, 'Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K})))))),, 'BlockStatement('AttributeWrapper('Block(#(90)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(91)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Computation('Assign(#(Identifier("last"))(.List{K}),, #(Identifier("s"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(163)(.List{K}),, #(10)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('PostIncrement(#(Identifier("s"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(164)(.List{K}),, #(10)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(162)(.List{K}),, #(48)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(162)(.List{K}),, #(6)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, #(Identifier("last"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(166)(.List{K}),, #(6)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(154)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(167)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("memcpy"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("dest"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("src"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("count"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(94)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("dst8"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, #(Identifier("dest"))(.List{K}))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(174)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("src8"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, #(Identifier("src"))(.List{K}))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(175)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('While('PostDecrement(#(Identifier("count"))(.List{K})),, 'BlockStatement('AttributeWrapper('Block(#(97)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(98)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Computation('Assign('Dereference('PostIncrement(#(Identifier("dst8"))(.List{K}))),, 'Dereference('PostIncrement(#(Identifier("src8"))(.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(178)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(177)(.List{K}),, #(18)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(177)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return(#(Identifier("dest"))(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(180)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(173)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(181)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Int(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("memcmp"))(.List{K}),, 'Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Void(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s2"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("n"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(99)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Unsigned(.List{K}),, 'Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("us1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Unsigned(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, #(Identifier("s1"))(.List{K}))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(185)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Unsigned(.List{K}),, 'Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("us2"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit('Cast('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Unsigned(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, #(Identifier("s2"))(.List{K}))))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(186)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('While('NotEquality('PostDecrement(#(Identifier("n"))(.List{K})),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(102)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(103)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('IfThenElse('NotEquality('Dereference(#(Identifier("us1"))(.List{K})),, 'Dereference(#(Identifier("us2"))(.List{K}))),, 'BlockStatement('AttributeWrapper('Block(#(105)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(106)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Return('Conditional('LessThan('Dereference(#(Identifier("us1"))(.List{K})),, 'Dereference(#(Identifier("us2"))(.List{K}))),, 'Negative('Constant('NoSuffix('DecimalConstant(#(1)(.List{K}))))),, 'Positive('Constant('NoSuffix('DecimalConstant(#(1)(.List{K}))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(189)(.List{K}),, #(4)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(188)(.List{K}),, #(21)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(104)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Nop(.List{K}),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(188)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(188)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('PostIncrement(#(Identifier("us1"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(191)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('PostIncrement(#(Identifier("us2"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(192)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(187)(.List{K}),, #(19)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(187)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return('Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(194)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(184)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(195)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("strcat"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s2"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(107)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("s"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit(#(Identifier("s1"))(.List{K})))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(199)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('While('NotEquality('Dereference(#(Identifier("s"))(.List{K})),, 'Constant('CharLiteral(#(0)(.List{K})))),, 'BlockStatement('AttributeWrapper('Block(#(108)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Computation('PostIncrement(#(Identifier("s"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(202)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(201)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('Call(#(Identifier("strcpy"))(.List{K}),, 'List(_`(_`)(kList("wklist_"), (#(Identifier("s"))(.List{K}),, #(Identifier("s2"))(.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(204)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return(#(Identifier("s1"))(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(205)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(198)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(206)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K})))),, 'DefinitionLocRange('FunctionDefinition('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("strncat"))(.List{K}),, 'AttributeWrapper('PointerType('Prototype('JustBase(.List{K}),, 'List(_`(_`)(kList("wklist_"), ('SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s1"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Const(.List{K}),, 'Char(.List{K}))))),, 'AttributeWrapper('Name(#(Identifier("s2"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), ('Attribute(#("restrict")(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'SingleName('Specifier('List(_`(_`)(kList("wklist_"), ('Named(#(Identifier("size_t"))(.List{K})))))),, 'AttributeWrapper('Name(#(Identifier("n"))(.List{K}),, 'JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))))),, (# false)(.List{K}))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'AttributeWrapper('Block(#(109)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('DefinitionLoc('DeclarationDefinition('InitNameGroup('Specifier('List(_`(_`)(kList("wklist_"), ('Char(.List{K}))))),, 'List(_`(_`)(kList("wklist_"), ('InitName('AttributeWrapper('Name(#(Identifier("s"))(.List{K}),, 'AttributeWrapper('PointerType('JustBase(.List{K})),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))),, 'SingleInit(#(Identifier("s1"))(.List{K})))))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(210)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('While('NotEquality('Dereference(#(Identifier("s"))(.List{K})),, 'Constant('CharLiteral(#(0)(.List{K})))),, 'BlockStatement('AttributeWrapper('Block(#(110)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Computation('PostIncrement(#(Identifier("s"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(213)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(212)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('While('LogicalAnd('NotEquality(#(Identifier("n"))(.List{K}),, 'Constant('NoSuffix('DecimalConstant(#(0)(.List{K}))))),, 'NotEquality('Assign('Dereference(#(Identifier("s"))(.List{K})),, 'Dereference('PostIncrement(#(Identifier("s2"))(.List{K})))),, 'Constant('CharLiteral(#(0)(.List{K}))))),, 'BlockStatement('AttributeWrapper('Block(#(111)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('BlockStatement('AttributeWrapper('Block(#(112)(.List{K}),, 'List(_`(_`)(kList("wklist_"), (.List{K}))),, 'List(_`(_`)(kList("wklist_"), ('StatementLoc('Computation('PostDecrement(#(Identifier("n"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(220)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('PostIncrement(#(Identifier("s"))(.List{K}))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(221)(.List{K}),, #(3)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(219)(.List{K}),, #(41)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K})))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(219)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Computation('Assign('Dereference(#(Identifier("s"))(.List{K})),, 'Constant('CharLiteral(#(0)(.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(223)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))),, 'StatementLoc('Return(#(Identifier("s1"))(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(224)(.List{K}),, #(2)(.List{K}),, #(0)(.List{K}))))))),, 'List(_`(_`)(kList("wklist_"), (.List{K}))))),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(209)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})),, 'CabsLoc(#("/home/regehr/z/c-semantics/dist/lib/string.c")(.List{K}),, #(225)(.List{K}),, #(1)(.List{K}),, #(0)(.List{K})))),, # "\n\n# 4 \"/home/regehr/z/c-semantics/dist/includes/string.h\" 2\n\n// string.h\n\ntypedef unsigned int size_t; // this needs to correspond to cfg:sizeut\nsize_t strlen(char *str);\nint strcmp(const char *str1, const char *str2);\nchar *strcpy(char* s1, const char* s2);\nchar *strncpy(char * restrict dest, const char * restrict src, size_t n);\nchar *strcat(char* dest, const char* src);\nchar *strncat(char * restrict s1, const char * restrict s2, size_t n);\nchar *strchr(const char *s, int c);\nvoid *memset ( void * ptr, int value, size_t num );\nvoid *memcpy ( void * destination, const void * source, size_t num );\nvoid *memmove(void *s1, const void *s2, size_t n);\nint memcmp(const void *s1, const void *s2, size_t n);\nvoid *memchr(const void *s, int c, size_t n);\nchar *strrchr ( const char *, int );\nint strncmp(const char *s1, const char *s2, size_t n);\nsize_t strcspn(const char *s1, const char *s2);\nchar *strpbrk(const char *s1, const char *s2);\nsize_t strspn(const char *s1, const char *s2);\nchar *strstr(const char *haystack, const char *needle);\nchar *strtok(char *restrict s1, const char *restrict delimiters);\n# 2 \"/home/regehr/z/c-semantics/dist/lib/string.c\" 2\n\n\n\n\n// stdlib.h\n\n\n\ntypedef unsigned int size_t; // this needs to correspond to cfg:sizeut\ntypedef struct {int quot; int rem;} div_t;\ntypedef struct {long int quot; long int rem;} ldiv_t;\n\nvoid *malloc(size_t size);\nvoid *realloc(void *ptr, size_t size);\nvoid free(void *pointer);\nvoid *calloc(size_t nelem, size_t elsize);\nvoid exit(int status);\nvoid __debug(int i);\nvoid srand (unsigned int seed);\nint rand (void);\nvoid abort(void);\nint atoi (const char * str);\n# 3 \"/home/regehr/z/c-semantics/dist/lib/string.c\" 2\n// nice public domain implementations at http://en.wikibooks.org/wiki/C_Programming/Strings\n\n// from http://clc-wiki.net/wiki/strncpy, public domain\nchar* strncpy(char* restrict dest, const char* restrict src, size_t n) {\n char *ret = dest;\n do {\n  if (!n--) {\n   return ret;\n  }\n } while (*dest++ = *src++);\n while (n--) {\n  *dest++ = 0;\n }\n return ret;\n}\n\nsize_t strlen(const char * str) {\n    const char *s;\n    for (s = str; *s; ++s);\n    return(s - str);\n}\n\nvoid* memset (void* dest, int value, size_t len) {\n unsigned char *ptr = (unsigned char*)dest;\n while (len-- > 0) {\n  *ptr++ = value;\n }\n return dest;\n}\n\n// public domain implementation from http://en.wikibooks.org/wiki/C_Programming/Strings\nvoid *memchr(const void *s, int c, size_t n) {\n const unsigned char *src = s;\n unsigned char uc = c;\n while (n-- != 0) {\n  if (*src == uc) {\n   return (void *) src;\n  }\n  src++;\n }\n return ((void *)0);\n}\n\n// public domain implementation from http://en.wikibooks.org/wiki/C_Programming/Strings\nsize_t strcspn(const char *s1, const char *s2) {\n const char *sc1;\n for (sc1 = s1; *sc1 != '\\0'; sc1++)\n  if (strchr(s2, *sc1) != ((void *)0))\n   return (sc1 - s1);\n return sc1 - s1; /* terminating nulls match */\n}\n\n// public domain implementation from http://en.wikibooks.org/wiki/C_Programming/Strings\nchar *strpbrk(const char *s1, const char *s2) {\n const char *sc1;\n for (sc1 = s1; *sc1 != '\\0'; sc1++)\n  if (strchr(s2, *sc1) != ((void *)0))\n   return (char *)sc1;\n return ((void *)0); /* terminating nulls match */\n}\n\n// public domain implementation from http://en.wikibooks.org/wiki/C_Programming/Strings\nsize_t strspn(const char *s1, const char *s2) {\n const char *sc1;\n for (sc1 = s1; *sc1 != '\\0'; sc1++)\n  if (strchr(s2, *sc1) == ((void *)0))\n   return (sc1 - s1);\n return sc1 - s1; /* terminating nulls don't match */\n}\n\n// public domain implementation from http://en.wikibooks.org/wiki/C_Programming/Strings\nchar *strstr(const char *haystack, const char *needle) {\n size_t needlelen;\n /* Check for the null needle case.  */\n if (*needle == '\\0')\n  return (char *) haystack;\n needlelen = strlen(needle);\n for (; (haystack = strchr(haystack, *needle)) != ((void *)0); haystack++)\n  if (strncmp(haystack, needle, needlelen) == 0)\n   return (char *) haystack;\n return ((void *)0);\n}\n\n// public domain implementation from http://en.wikibooks.org/wiki/C_Programming/Strings\nchar *strtok_r(char *s, const char *delimiters, char **lasts) {\n char *sbegin, *send;\n sbegin = s ? s : *lasts;\n sbegin += strspn(sbegin, delimiters);\n if (*sbegin == '\\0') {\n  *lasts = \"\";\n  return ((void *)0);\n }\n send = sbegin + strcspn(sbegin, delimiters);\n if (*send != '\\0')\n  *send++ = '\\0';\n *lasts = send;\n return sbegin;\n}\n\n// public domain implementation from http://en.wikibooks.org/wiki/C_Programming/Strings\nchar *strtok(char *restrict s1, const char *restrict delimiters) {\n static char *ssave = \"\";\n return strtok_r(s1, delimiters, &ssave);\n}\n\nint strcmp (const char * s1, const char * s2) {\n    for(; *s1 == *s2; ++s1, ++s2)\n        if(*s1 == 0)\n            return 0;\n    return *(unsigned char *)s1 < *(unsigned char *)s2 ? -1 : 1;\n}\n\nvoid *memmove(void *s1, const void *s2, size_t n) {\n char* tmp = (char*)malloc(n);\n memcpy(tmp, s2, n);\n memcpy(s1, tmp, n);\n free(tmp);\n return s1;\n}\n\n// public domain implementation from http://en.wikibooks.org/wiki/C_Programming/Strings#The_strcat_function\nchar *strchr(const char *s, int c) {\n /* Scan s for the character.  When this loop is finished,\n\ts will either point to the end of the string or the\n\tcharacter we were looking for.  */\n while (*s != '\\0' && *s != (char)c)\n  s++;\n return ( (*s == c) ? (char *) s : ((void *)0) );\n}\n\n// public domain implementation from http://en.wikibooks.org/wiki/C_Programming/Strings#The_strncmp_function\nint strncmp(const char *s1, const char *s2, size_t n) {\n unsigned char uc1, uc2;\n /* Nothing to compare?  Return zero.  */\n if (n == 0)\n  return 0;\n /* Loop, comparing bytes.  */\n while (n-- > 0 && *s1 == *s2) {\n /* If we've run out of bytes or hit a null, return zero\n\tsince we already know *s1 == *s2.  */\n  if (n == 0 || *s1 == '\\0')\n   return 0;\n  s1++;\n  s2++;\n }\n uc1 = (*(unsigned char *) s1);\n uc2 = (*(unsigned char *) s2);\n return ((uc1 < uc2) ? -1 : (uc1 > uc2));\n }\n\n\nchar *(strrchr)(const char *s, int c) {\n     const char *last = ((void *)0);\n     /* If the character we're looking for is the terminating null,\n        we just need to look for that character as there's only one\n        of them in the string.  */\n     if (c == '\\0')\n         return strchr(s, c);\n     /* Loop through, finding the last match before hitting NULL.  */\n     while ((s = strchr(s, c)) != ((void *)0)) {\n         last = s;\n         s++;\n     }\n     return (char *) last;\n }\n\n\n\n// from http://www.danielvik.com/2010/02/fast-memcpy-in-c.html\n// by Daniel Vik\nvoid* memcpy(void* dest, const void* src, size_t count) {\n char* dst8 = (char*)dest;\n char* src8 = (char*)src;\n\n while (count--) {\n  *dst8++ = *src8++;\n }\n return dest;\n}\n\n// this is public domain\nint memcmp(const void *s1, const void *s2, size_t n) {\n const unsigned char *us1 = (const unsigned char *) s1;\n const unsigned char *us2 = (const unsigned char *) s2;\n while (n-- != 0) {\n  if (*us1 != *us2) {\n   return (*us1 < *us2) ? -1 : +1;\n  }\n  us1++;\n  us2++;\n }\n return 0;\n}\n\n// public domain implementation from http://en.wikibooks.org/wiki/C_Programming/Strings#The_strcat_function\nchar *strcat(char *restrict s1, const char *restrict s2) {\n char *s = s1;\n /* Move s so that it points to the end of s1.  */\n while (*s != '\\0')\n  s++;\n /* Copy the contents of s2 into the space at the end of s1.  */\n strcpy(s, s2);\n return s1;\n }\n\n// public domain implementation from http://en.wikibooks.org/wiki/C_Programming/Strings#The_strncat_function\nchar *strncat(char *restrict s1, const char *restrict s2, size_t n) {\n char *s = s1;\n /* Loop over the data in s1.  */\n while (*s != '\\0')\n  s++;\n /* s now points to s1's trailing null character, now copy\n\tup to n bytes from s1 into s stopping if a null character\n\tis encountered in s2.\n\tIt is not safe to use strncpy here since it copies EXACTLY n\n\tcharacters, NULL padding if necessary.  */\n while (n != 0 && (*s = *s2++) != '\\0') {\n  n--;\n  s++;\n }\n *s = '\\0'; // CME: fixed problem here; read memory and was comparing\n return s1;\n}\n"(.List{K})).

op 'formulae : -> KLabel .
op 'linked-program : -> KLabel .
eq 'linked-program(.List{K}) = 'Program('List((_`(_`)(kList("wklist_"), ((TranslationUnitName("/home/regehr/reduce/wrong1/small.c")(.List`{K`}) ),, (TranslationUnitName("/home/regehr/z/c-semantics/dist/lib/clib.c")(.List`{K`}) ),, (TranslationUnitName("/home/regehr/z/c-semantics/dist/lib/ctype.c")(.List`{K`}) ),, (TranslationUnitName("/home/regehr/z/c-semantics/dist/lib/math.c")(.List`{K`}) ),, (TranslationUnitName("/home/regehr/z/c-semantics/dist/lib/stdio.c")(.List`{K`}) ),, (TranslationUnitName("/home/regehr/z/c-semantics/dist/lib/stdlib.c")(.List`{K`}) ),, (TranslationUnitName("/home/regehr/z/c-semantics/dist/lib/string.c")(.List`{K`}) ),, .List{K}))))).
endm

ENDOFCOMPILEDPROGRAM
 }
